---
interface Props {
  children: any;
  description: string;
  title: string;
  entry: any;
}
import { Image } from "astro:assets";
import Clock from "../../icons/Clock.astro";

import BlogLayout from "../../layouts/BlogLayout.astro";

import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const allBlogArticles: CollectionEntry<"blog">[] =
    await getCollection("blog");

  return allBlogArticles.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const { Content } = await entry.render();
---

<BlogLayout
  title=`${entry.data.title} - Blog Alberto Ramos - Web Developer`
  description="Welcome to the blog of Alberto Ramos: a dynamic web developer driven by a passion for learning and a collaborative spirit. Web developer adept at crafting visually stunning and highly functional web applications."
>
  <div class="">
    <div class="pt-24 sticky">
      <button
        onclick="history.back()"
        class="hover:underline flex justify-center items-center gap-8 border-2 rounded-full p-2 border-purple-400 hover:opacity-70"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="icon icon-tabler icons-tabler-outline icon-tabler-arrow-left"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
          <path d="M5 12l14 0"></path>
          <path d="M5 12l6 6"></path>
          <path d="M5 12l6 -6"></path>
        </svg>
      </button>
    </div>

    <div class="text-pretty">
      <div class="flex flex-col pt-24 gap-1">
        <h1 class="text-5xl font-black">{entry.data.title}</h1>
        <h6 class="py-0">{entry.data.author}</h6>

        <span class="flex gap-2"><Clock />{entry.data.time}</span>
        <div class="gap-4">
          {
            entry.data.tags.map((tag: String[]) => (
              <span class="w-full px-2 py-1 mr-2 mt-2 bg-transparent border-2 border-white/80 text-white/90 rounded-full text-xs hover:opacity-90 hover:text-purple-300 cursor-pointer  transition-all duration-100 hover:border-purple-500">
                <a href={`/articles/tag` + tag}>#{tag}</a>
              </span>
            ))
          }
        </div>
      </div>
      <div class="w-full flex items-center pt-12">
        <Image
          src={entry.data.image}
          alt={entry.data.title}
          height={200}
          width={500}
          class="cover rounded-xl"
        />
      </div>
      <div class="prose pt-12 pb-32">
        <Content />
      </div>
      <!-- end -->
    </div>
  </div>
</BlogLayout>

<style is:global>
  p {
    margin: 20px 0px;
  }
  h1 {
    font-size: 2rem;
  }
  h2 {
    margin: 20px 0px;
    font-size: 1.6rem;
  }

  h3{
    margin: 20px 0px;
    font-size: 1.3rem;
  }
  .styled-link{
    color: rgb(228, 158, 228);
  }
  .accent{
    color: rgb(171, 39, 171);
  }
</style>
