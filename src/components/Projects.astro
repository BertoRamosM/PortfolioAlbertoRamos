---
import { getLangFromUrl, useTranslations } from "../src/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import ReactIcon from "../icons/ReactIcon.astro";
import StylesComponentsIcon from "../icons/StyledComponentsIcon.astro";
import Astroicon from "../icons/AstroIcon.astro";
import TailwindIcon from "../icons/TailwindIcon.astro";
import Github from "../icons/Github.astro";
import Live from "../icons/Live.astro";
import MaterialUI from "../icons/MaterialUI.astro";
import TypeScript from "../icons/TypeScript.astro";
import ReduxIcon from "../icons/ReduxIcon.astro";
import ZustandIcon from "../icons/ZustandIcon.astro";
import NextJsIcon from "../icons/NextJsIcon.astro";
import MongoIcon from "../icons/MongoIcon.astro";

const TECHS = {
  REACT: {
    name: "React",
    icon: ReactIcon,
    link: "https://react.dev/",
  },
  STYLEDCOMPONENTS: {
    name: "StyledC",

    icon: StylesComponentsIcon,
    link: "https://styled-components.com/",
  },
  ASTRO: {
    name: "Astro",
    icon: Astroicon,
    link: "https://astro.build/",
  },
  TAILWIND: {
    name: "Tailwind",
    icon: TailwindIcon,
    link: "https://tailwindcss.com/",
  },
  MaterialUI: {
    name: "MaterialUI",
    icon: MaterialUI,
    link: "https://mui.com/",
  },
  TypeScript: {
    name: "TypeScript",
    icon: TypeScript,
    link: "https://www.typescriptlang.org/",
  },
  Redux: {
    name: "Redux",
    icon: ReduxIcon,
    link: "https://redux-toolkit.js.org/",
  },
  Zustand: {
    name: "Zustand",
    icon: ZustandIcon,
    link: "https://zustand-demo.pmnd.rs/",
  },
  NextJs: {
    name: "NextJs",
    icon: NextJsIcon,
    link: "https://nextjs.org/",
  },
  MongoDb: {
    name: "MongoDB",
    icon: MongoIcon,
    link: "https://www.mongodb.com/",
  },
};

const PROJECTS = [
  {
    title: "Les Piplettes de Granville",
    subtitle: `| ${t("proj.piplettes1")}`,
    description: t("proj.piplettes2"),
    state: {
      status: false,
      name: t("proj.3.1"),
    },
    link: "https://piplettes.vercel.app/",
    github: "https://github.com/BertoRamosM/Piplettes",
    image: "/projects/piplettes.webp",
    tags: [TECHS.NextJs, TECHS.MongoDb, TECHS.TAILWIND],
  },
  {
    title: "Albert s'occupe de tout ",
    subtitle: `| ${t("proj.9")}`,
    description: t("proj.10"),
    state: {
      status: false,
      name: t("proj.3.1"),
    },
    link: "https://albertsoccupedetout.netlify.app/",
    github: undefined,
    image: "/projects/occupe.webp",
    tags: [TECHS.ASTRO, TECHS.TAILWIND],
  },
  {
    title: "Forgweb ",
    subtitle: `| ${t("proj.1")}`,
    description: t("proj.2"),
    state: {
      status: false,
      name: t("proj.3.1"),
    },
    link: "https://forgweb.netlify.app/",
    github: "https://github.com/BertoRamosM/Forgweb",
    image: "/projects/Forgweb.webp",
    tags: [TECHS.REACT, TECHS.Redux, TECHS.STYLEDCOMPONENTS],
  },
  {
    title: "Insert Coin",
    subtitle: t("proj.7.1"),
    description: t("proj.7"),
    state: {
      status: true,
      name: t("proj.3.2"),
    },
    link: "https://insert-coin-tau.vercel.app/",
    github: "https://github.com/BertoRamosM/Insert-Coin",
    image: "/projects/insert.webp",
    tags: [TECHS.REACT, TECHS.NextJs, TECHS.Zustand],
  },
  {
    title: "Quizzo ",
    subtitle: `| ${t("proj.4")}`,
    description: t("proj.5"),
    state: {
      status: true,
      name: t("proj.3.2"),
    },
    link: "https://quizzo-berto.netlify.app/",
    github: "https://github.com/BertoRamosM/Quizzo",
    image: "/projects/quizzo.webp",
    tags: [TECHS.REACT, TECHS.TypeScript, TECHS.Zustand, TECHS.TAILWIND],
  },
];
---

{
  PROJECTS.map(
    (
      { title, subtitle, state, description, tags, image, github, link },
      index
    ) => (
      <>
        <article class="pb-14 pt-14 ">
          <a href={link} target="_blank">
            <h3 class="text-3xl font-semibold text-red-500 dark:text-yellow-100 mb-2 transition-transform duration-200 ease-in-out">
              {title}
              <span class="text-purple-800 dark:text-purple-400 text-2xl">
                {subtitle}
              </span>
            </h3>
          </a>
          <p class="text-m mb-4 text-pretty">{description}</p>
          <ul class="flex flex-row gap-x-4 mb-8">
            {tags.map((tag) => (
              <li>
                <a
                  href={tag.link}
                  target="_blank"
                  class=" flex flex-wrap items-center justify-center gap-x-2 rounded-full text-[12px] sm:text-[16px] py-1 px-2  truncate hover:scale-110  transition-transform duration-300 ease-in-out glass "
                >
                  {tag.icon ? <tag.icon class="size-4 truncate" /> : null}

                  {tag.name}
                </a>
              </li>
            ))}
          </ul>
          <div class="relative overflow-hidden">
            <a href={link} target="_blank">
              <img
                loading="lazy"
                src={image}
                alt={`Screenshot from project ${title}`}
                class="rounded shadow-2xl shadow-purple-500/30 hover:scale-110 transition-transform duration-[1000ms] ease-in-out glass"
              />
            </a>
            {state.status === false ? (
              <span class="absolute top-3 right-3 bg-opacity-75 text-white text-sm px-2 py-1 rounded-bl rounded-tr bg-orange-400 backdrop-blur-3xl">
                {state.name}
              </span>
            ) : (
              <span class="absolute top-3 right-3 bg-opacity-75 text-white text-sm px-2 py-1 rounded-bl rounded-tr bg-purple-500">
                {state.name}
              </span>
            )}
          </div>
          <nav class="flex gap-4 pt-2 align-center  mt-8 flex-wrap ">
            {link != undefined ? (
              <a
                href={link}
                target="_blank"
                class="rounded-full border border-white/10 gap-x-3
  py-2 px-3 bg-white/10 hover:scale-105 hover:bg-white/10 transition flex item-center justify-center hover:text-purple-300 glass"
              >
                <Live class="size-6" />
                {t("proj.8")}
              </a>
            ) : null}

            {github != undefined ? (
              <a
                href={github}
                target="_blank"
                class="rounded-full border border-white/10 gap-x-3 py-2 px-3 bg-white/10 hover:scale-105 hover:bg-white/10 transition flex hover:text-purple-300 item-center glass"
              >
                <Github class="size-5" />
                Github
              </a>
            ) : null}
          </nav>
        </article>

        <hr class="my-2 h-0.5 border-t-0 bg-[#dddddd35] dark:bg-white/10" />
      </>
    )
  )
}

<style>
  .glass {
    background-color: transparent;
    backdrop-filter: blur(19px) saturate(180%);
    border-radius: 10px;
    border: 1px solid gray;
  }
</style>
