---
import { getLangFromUrl, useTranslations } from "../src/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import ReactIcon from "../icons/ReactIcon.astro";
import StylesComponentsIcon from "../icons/StyledComponentsIcon.astro";
import Astroicon from "../icons/AstroIcon.astro";
import TailwindIcon from "../icons/TailwindIcon.astro";
import Github from "../icons/Github.astro";
import Live from "../icons/Live.astro";
import MaterialUI from "../icons/MaterialUI.astro";
import TypeScript from "../icons/TypeScript.astro";
import ReduxIcon from "../icons/ReduxIcon.astro";
import ZustandIcon from "../icons/ZustandIcon.astro";

const TECHS = {
  REACT: {
    name: "React",
    class: "bg-blue-900 text-white border-2 border-blue-400",
    icon: ReactIcon,
    link: "https://react.dev/",
  },
  STYLEDCOMPONENTS: {
    name: "StyledC",
    class: "bg-pink-400 text-black text border-2 border-pink-700",
    icon: StylesComponentsIcon,
    link: "https://styled-components.com/",
  },
  ASTRO: {
    name: "Astro",
    class: "background-black text-white border-2 border-orange-600",
    icon: Astroicon,
    link: "https://astro.build/",
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-gray-800 text-[#73bcf6] border-2 border-blue-500 ",
    icon: TailwindIcon,
    link: "https://tailwindcss.com/",
  },
  MaterialUI: {
    name: "MaterialUI",
    class: "bg-gray-800 text-[#73bcf6] border-2 border-blue-500 ",
    icon: MaterialUI,
    link: "https://mui.com/",
  },
  TypeScript: {
    name: "TypeScript",
    class: "bg-white text-blue-800 border-2 border-blue-500 ",
    icon: TypeScript,
    link: "https://www.typescriptlang.org/",
  },
  Redux: {
    name: "Redux",
    class: "bg-purple-400 text-black border-2 border-purple-400 ",
    icon: ReduxIcon,
    link: "https://redux-toolkit.js.org/",
  },
  Zustand: {
    name: "Zustand",
    class: "bg-red-600 text-white border-2 border-purple-400 ",
    icon: ZustandIcon,
    link: "https://zustand-demo.pmnd.rs/",
  },
};

const PROJECTS = [
  {
    title: "Albert s'occupe de tout ",
    subtitle: `| ${t("proj.9")}`,
    description: t("proj.10"),
    state: {
      status: false,
      name: t("proj.3.1"),
    },
    link: "https://albertsoccupedetout.netlify.app/",
    github: undefined,
    image: "/projects/occupe.webp",
    tags: [TECHS.ASTRO, TECHS.TAILWIND],
  },
  {
    title: "Forgweb ",
    subtitle: `| ${t("proj.1")}`,
    description: t("proj.2"),
    state: {
      status: false,
      name: t("proj.3.1"),
    },
    link: "https://forgweb.netlify.app/",
    github: "https://github.com/BertoRamosM/Forgweb",
    image: "/projects/Forgweb.webp",
    tags: [TECHS.REACT, TECHS.Redux, TECHS.STYLEDCOMPONENTS],
  },
  {
    title: "Quizzo ",
    subtitle: `| ${t("proj.4")}`,
    description: t("proj.5"),
    state: {
      status: true,
      name: t("proj.3.2"),
    },
    link: "https://quizzo-berto.netlify.app/",
    github: "https://github.com/BertoRamosM/Quizzo",
    image: "/projects/quizzo.webp",
    tags: [TECHS.REACT, TECHS.TypeScript, TECHS.Zustand],
  },
  {
    title: "Argent Bank ",
    subtitle: "",
    description: t("proj.7"),
    state: {
      status: true,
      name: t("proj.3.2"),
    },
    link: undefined,
    github:
      "https://github.com/BertoRamosM/ocr-11-Argent-Bank/tree/main/ocrP11-ArgentBank/Argent-Bank",
    image: "/projects/Argent.webp",
    tags: [TECHS.REACT, TECHS.Redux],
  },
];
---

{
  PROJECTS.map(
    ({ title, subtitle, state, description, tags, image, github, link }) => (
      <article class="pb-8 pt-14 ">
        <a href={link} target="_blank">
          <h3 class="text-3xl font-semibold text-yellow-100 mb-2">
            {title}
            <span class="text-purple-300 text-2xl">{subtitle}</span>
          </h3>
        </a>
        <p class="text-m mb-4 text-pretty">{description}</p>
        <ul class="flex flex-row gap-x-4 mb-8">
          {tags.map((tag) => (
            <li>
              <a
                href={tag.link}
                target="_blank"
                class={`${tag.class} flex items-center justify-center gap-x-2 rounded-full text-xs sm:text-xxs md:text-sm py-1 px-1 font-semibold truncate hover:scale-105 hover:opacity-80 transition-transform duration-200 ease-in-out`}
              >
                {tag.icon ? <tag.icon class="size-4 truncate" /> : null}

                {tag.name}
              </a>
            </li>
          ))}
        </ul>
        <div class="relative">
          <a href={link} target="_blank">
            <img
              loading="lazy"
              src={image}
              alt={`Screenshot from project ${title}`}
              class="rounded shadow-2xl shadow-white/20 hover:scale-105 transition-transform duration-500 ease-in-out"
            />
          </a>
          {state.status === false ? (
            <span class="absolute top-3 right-3 bg-opacity-75 text-white text-sm px-2 py-1 rounded-bl rounded-tr bg-orange-400">
              {state.name}
            </span>
          ) : (
            <span class="absolute top-3 right-3 bg-opacity-75 text-white text-sm px-2 py-1 rounded-bl rounded-tr bg-blue-500">
              {state.name}
            </span>
          )}
        </div>
        <nav class="flex gap-4 pt-2 align-center  mt-8 flex-wrap ">
          {link != undefined ? (
            <a
              href={link}
              target="_blank"
              class="rounded-full border border-white/10 gap-x-3
  py-2 px-3 bg-white/10 hover:scale-105 hover:bg-white/10 transition flex item-center justify-center hover:text-purple-300"
            >
              <Live class="size-6" />
              {t("proj.8")}
            </a>
          ) : null}

          {github != undefined ? (
            <a
              href={github}
              target="_blank"
              class="rounded-full border border-white/10 gap-x-3 py-2 px-3 bg-white/10 hover:scale-105 hover:bg-white/10 transition flex hover:text-purple-300 item-center "
            >
              <Github class="size-5" />
              Github
            </a>
          ) : null}
        </nav>
      </article>
    )
  )
}
