---
import { getLangFromUrl, useTranslations } from "../src/i18n/utils";


const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import Spain from "../flags-icons/Spain.astro";
import Cat from "../flags-icons/Catalonia.astro";
import Uk from "../flags-icons/Uk.astro";
import France from "../flags-icons/France.astro";

const english = {
  name: "",
  component: Uk,
};
const spanish = {
  name: "es",
  component: Spain,
};
const catalan = {
  name: "ca",
  component: Cat,
};

const french = {
  name: "fr",
  component: France,
};

const LanguagesList = [english, spanish, catalan, french];
import { Astronav, Dropdown, DropdownItems } from "astro-navbar";
import ArrowDown from "../icons/ArrowDown.astro";
---
<style>
  @media screen and (max-width: 560px) {
    .nav-link {
      font-size: 0.7rem;
    }
    header > * {
      gap: 1rem;
    }
    @media screen and (max-width: 335px) {
      .nav-link {
        font-size: 0.6rem;
      }
    }
  }
  @media screen and (max-width: 450px) {
    header > * {
      gap: 0.7rem;
    }
  }

  header {
    position: fixed;
    top: 0;
    left: 5%;
    right: 5%;
    z-index: 50;
    padding: 1.5rem;
    transition: transform 0.3s ease;
    background-color: rgba(169, 85, 247, 0.082);
    backdrop-filter: blur(19px) saturate(180%);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.125);
  }

  .header-hidden {
    transform: translateY(-115%);
  }

  .theme-icon {
    width: 18px;
    height: 18px;
  }

  .hidden {
    display: none;
  }
</style>

<header id="header" class="flex justify-center mx-auto max-w-max">
  <nav
    class="flex flex-row justify-center items-center gap-x-10 opacity-90 relative"
  >
    
    <a
      href="#projects"
      class="hover:underline hover:text-purple-400 nav-link font-semibold"
      >{t("header.project")}</a
    >
    <a
      href="#about"
      class="hover:underline hover:text-purple-400 nav-link font-semibold"
      >{t("header.about")}</a
    >
    <a
      href="#contact"
      class="hover:underline hover:text-purple-400 nav-link font-semibold"
      >{t("header.contact")}</a
    >
    <a
      href="/blog"
      class="hover:underline hover:text-purple-400 nav-link font-semibold"
      >Blog</a
    >

    <Astronav>
      <Dropdown>
        <button
          class="flex items-center hover:text-purple-300 hover:underline group"
        >
          <p class="nav-link py-2 font-semibold">{t("header.language")}</p>
          <ArrowDown class="group-hover:animate-bounce" />
        </button>
        <DropdownItems>
          <div class="">
            <ul>
              <div class="flex justify-center absolute right-2">
                {
                  LanguagesList.map((language) => (
                    <a class="mx-4 my-1 font-semibold" href={`/${language.name}`}>
                      <language.component class="size-8" />
                      {/* <{language.link} />
                      <img
                        src={language.link}
                        alt={`${language} flag`}
                        class="size-6"
                      />  */}
                    </a>
                  ))
                }
              </div>
              <li></li>
            </ul>
          </div>
        </DropdownItems>
      </Dropdown>
    </Astronav>
    <button id="theme-toggle" class="">
     <svg id="sun-icon" class="theme-icon hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-sun"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" /><path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" /></svg>
     <svg id="moon-icon" class="theme-icon hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-moon"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" /></svg>
    </button>
  </nav>
</header>
<script>
  const themeToggle = document.getElementById('theme-toggle');
  const htmlElement = document.documentElement;
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');

  function updateIcons() {
    if (htmlElement.classList.contains('dark')) {
      sunIcon.classList.remove('hidden');
      moonIcon.classList.add('hidden');
    } else {
      sunIcon.classList.add('hidden');
      moonIcon.classList.remove('hidden');
    }
  }

  themeToggle.addEventListener('click', () => {
    if (htmlElement.classList.contains('dark')) {
      htmlElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      htmlElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
    updateIcons();
  });

 
  const storedTheme = localStorage.getItem('theme');
  if (storedTheme) {
    htmlElement.classList.add(storedTheme);
  } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
    htmlElement.classList.add('dark');
  }
  updateIcons();

  document.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    let lastScrollY = window.scrollY;

    document.addEventListener("scroll", () => {
      if (window.scrollY > lastScrollY) {
        header?.classList.add("header-hidden");
      } else {
        header?.classList.remove("header-hidden");
      }
      lastScrollY = window.scrollY;
    });
  });
</script>